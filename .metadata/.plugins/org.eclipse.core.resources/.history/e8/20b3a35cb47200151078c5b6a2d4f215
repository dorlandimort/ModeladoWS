import java.awt.Color;
import java.awt.Graphics;

import javax.swing.JFrame;

public class Ventana extends JFrame {

	public static int ESCALA = 20;
	public static double[] matrizSegundoCuadrante = { -8, 0, -8, 0 };
	public static double[] matrizTercerCuadrante = { -8, -10, -8, -10 };
	public static double[] matrizCuartoCuadrante = { 0, -10, 0, -10 };

	@Override
	public void paint(Graphics g) {

		MatrizImpl operaciones = new MatrizImpl();

		// Dibujar plano cartesiano
		
		 g.drawLine(convertirPuntoX(-100), convertirPuntoY(0),
		 convertirPuntoX(100), convertirPuntoY(0));
		 g.drawLine(convertirPuntoX(0), convertirPuntoY(100),
		 convertirPuntoX(0), convertirPuntoY(-100));
		 

		// Declarar puntos iniciales
	
		/*
		double[] puntoInicialA = {2, -2, 0};
		double[] puntoInicialB = {2, 2, 0};
		double[] puntoInicialC = {-2, -2, 0};
		double[] puntoInicialD = {-2, 2, 0};
		double[] puntoInicialE = {0, 0, 4};

		
		double[] puntoTransformadoA = operaciones.transformar(puntoInicialA);
		double[] puntoTransformadoB = operaciones.transformar(puntoInicialB);
		double[] puntoTransformadoC = operaciones.transformar(puntoInicialC);
		double[] puntoTransformadoD = operaciones.transformar(puntoInicialD);
		double[] puntoTransformadoE = operaciones.transformar(puntoInicialE);
		
		g.setColor(Color.RED);
		g.drawLine(convertirPuntoX(puntoTransformadoA[0]), convertirPuntoY(puntoTransformadoA[1]),
				convertirPuntoX(puntoTransformadoB[0]), convertirPuntoY(puntoTransformadoB[1]));
		
		g.drawLine(convertirPuntoX(puntoTransformadoB[0]), convertirPuntoY(puntoTransformadoB[1]),
				convertirPuntoX(puntoTransformadoD[0]), convertirPuntoY(puntoTransformadoD[1]));
		
		g.drawLine(convertirPuntoX(puntoTransformadoD[0]), convertirPuntoY(puntoTransformadoD[1]),
				convertirPuntoX(puntoTransformadoC[0]), convertirPuntoY(puntoTransformadoC[1]));
		
		g.drawLine(convertirPuntoX(puntoTransformadoC[0]), convertirPuntoY(puntoTransformadoC[1]),
				convertirPuntoX(puntoTransformadoA[0]), convertirPuntoY(puntoTransformadoA[1]));
		g.setColor(Color.BLUE);
		g.drawLine(convertirPuntoX(puntoTransformadoA[0]), convertirPuntoY(puntoTransformadoA[1]),
				convertirPuntoX(puntoTransformadoE[0]), convertirPuntoY(puntoTransformadoE[1]));
		g.drawLine(convertirPuntoX(puntoTransformadoB[0]), convertirPuntoY(puntoTransformadoB[1]),
				convertirPuntoX(puntoTransformadoE[0]), convertirPuntoY(puntoTransformadoE[1]));
		g.drawLine(convertirPuntoX(puntoTransformadoC[0]), convertirPuntoY(puntoTransformadoC[1]),
				convertirPuntoX(puntoTransformadoE[0]), convertirPuntoY(puntoTransformadoE[1]));
		g.drawLine(convertirPuntoX(puntoTransformadoD[0]), convertirPuntoY(puntoTransformadoD[1]),
				convertirPuntoX(puntoTransformadoE[0]), convertirPuntoY(puntoTransformadoE[1]));
				*/
		double[] puntoInicialA = {3, -3, 0};
		double[] puntoInicialB = {3, 6, 0};
		double[] puntoInicialC = {-1, 2, 4};
		double[] puntoInicialD = {-4, -10, 1};
		double[] puntoInicialE = {-1, 2, 3};
		double[] puntoInicialF = {0, 0, 4};
		double[] puntoInicialG = {0, 0, 4};
		double[] puntoInicialH = {0, 0, 0};
		
		double[] puntoTransformadoA = operaciones.transformar(puntoInicialA);
		double[] puntoTransformadoB = operaciones.transformar(puntoInicialB);
		double[] puntoTransformadoC = operaciones.transformar(puntoInicialC);
		double[] puntoTransformadoD = operaciones.transformar(puntoInicialD);
		double[] puntoTransformadoE = operaciones.transformar(puntoInicialE);
		double[] puntoTransformadoF = operaciones.transformar(puntoInicialF);
		double[] puntoTransformadoG = operaciones.transformar(puntoInicialG);
		double[] puntoTransformadoH = operaciones.transformar(puntoInicialH);
		
		g.setColor(Color.RED);
		g.drawLine(convertirPuntoX(puntoTransformadoA[0]), convertirPuntoY(puntoTransformadoA[1]),
				convertirPuntoX(puntoTransformadoB[0]), convertirPuntoY(puntoTransformadoB[1]));
		
		g.drawLine(convertirPuntoX(puntoTransformadoB[0]), convertirPuntoY(puntoTransformadoB[1]),
				convertirPuntoX(puntoTransformadoC[0]), convertirPuntoY(puntoTransformadoC[1]));
		
		g.drawLine(convertirPuntoX(puntoTransformadoC[0]), convertirPuntoY(puntoTransformadoC[1]),
				convertirPuntoX(puntoTransformadoD[0]), convertirPuntoY(puntoTransformadoD[1]));
		
		g.drawLine(convertirPuntoX(puntoTransformadoD[0]), convertirPuntoY(puntoTransformadoD[1]),
				convertirPuntoX(puntoTransformadoA[0]), convertirPuntoY(puntoTransformadoA[1]));
		
		g.drawLine(convertirPuntoX(puntoTransformadoB[0]), convertirPuntoY(puntoTransformadoB[1]),
				convertirPuntoX(puntoTransformadoE[0]), convertirPuntoY(puntoTransformadoE[1]));
	}

	private int convertirPuntoX(double x) {
		double centro = this.getWidth() / 2.0;
		return (int) (centro + x * ESCALA);
	}

	private int convertirPuntoY(double y) {
		double centro = this.getHeight() / 2.0;
		return (int) (centro - y * ESCALA);
	}

}
